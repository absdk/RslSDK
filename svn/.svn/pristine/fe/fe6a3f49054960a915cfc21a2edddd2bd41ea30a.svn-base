@model IEnumerable<SoftwareGrid.DataLogic.Models.Organization>
@using EasySoft.Helper;
@{
    ViewBag.Title = "Organization";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}
<div class="flat_area grid_16">
    <h2>
        Organization List</h2>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
</div>
@using (Html.BeginForm("Search", "Organization"))
{
    <div class="box grid_16">
        <h2 class="box_head">
            Search</h2>
        <a href="#" class="grabber">&nbsp;</a> <a href="#" class="toggle">&nbsp;</a>
        <div class="toggle_container">
            <div class="block">
                <div class="search-item">
                    <div class="search-item-left">
                        <div class="label-container">
                            @Html.Label("Name - Trade Name")
                        </div>
                        <div class="text-container">
                            @Html.TextBox("Name")
                        </div>
                    </div>
                    <div class="search-item-right">
                        <div class="label-container">
                            @Html.Label("OrganizationCategory.Name")
                        </div>
                        <div class="text-container">
                            @Html.DropDownList("OrganizationCategoryID", ((IEnumerable<SoftwareGrid.DataLogic.Models.OrganizationCategory>)ViewBag.PossibleOrganizationCategories).Select(option => new SelectListItem
                       {
                           Text = (option == null ? "None" : option.Name),
                           Value = option.OrganizationCategoryID.ToString(),
                       }), "Choose...")
                        </div>
                    </div>
                </div>
                <div style="width: 50%; float: left;">
                    &nbsp;
                </div>
                <div class="button_bar clearfix" style="float: left;">
                    <button class="green" type="submit">
                        <span>Search</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
}
<div style="clear: both;">
</div>
<div class="box grid_16">
    @(Html.Telerik().Grid(Model)
        .Name("Grid")
        .DataKeys(keys => keys.Add(c => c.OrganizationID))
        .Columns(columns =>
        {
            columns.Bound(c => c.OrganizationCodeNumber).Title("Organization Code Number").Width("15%").Sortable(true).Groupable(true).Filterable(true);
            columns.Template(
                @<text> <a href="@Url.Action("Overview", "Organization", new { organizationId = @item.OrganizationID })" target="_blank" title="+@item.Name+">@item.Name</a>
    </text>
            ).HeaderTemplate(
                @<text> <span>Organization Name</span>
    </text>
            ).Width("20%");
            columns.Bound(c => c.OrganizationCategory.Name).Title("OrganizationCategory.Name").Width("20%").Sortable(true).Groupable(true).Filterable(true);
            columns.Bound(c => c.LegalBusinessName).Title("Legal Business Name").Width("25%").Sortable(true).Groupable(true).Filterable(true);
            columns.Template(
            @<text>
    <center>
        <a href="@Url.Action("Edit", "Organization", new { id = @item.OrganizationID })" title="Edit">
            <img alt="Edit" src="/content/images/edit.png" /></a>
    </center>
    </text>
        ).HeaderTemplate(
            @<text>
    <center>
        <span>Edit</span>
    </center>
    </text>
        ).Width("20px");
            columns.Template(
                @<text>
    <center>
        <a href="@Url.Action("Delete", "Organization", new { id = @item.OrganizationID })" title="Delete">
            <img alt="Delete" src="/content/images/delete.png" /></a>
    </center>
    </text>
            ).HeaderTemplate(
                @<text>
    <center>
        <span>Delete</span>
    </center>
    </text>
            ).Width("20px");
        })
        .Scrollable(scrolling => scrolling.Enabled(true))
        .Sortable(sorting => sorting.Enabled(true))
        .Pageable(paging => paging.Enabled(true))
        .Filterable(filtering => filtering.Filters(filters =>
        {
            if (ViewData["Name"].ToString(true) != string.Empty)
            {
                filters.Add(o => o.Name).Contains(ViewData["Name"].ToString(true));
            }
            if (ViewData["OrganizationCategoryID"].ToString(true) != string.Empty)
            {
                filters.Add(o => o.OrganizationCategoryID).IsEqualTo(ViewData["OrganizationCategoryID"].ToInteger(true));
            }
        }))
        .Groupable(grouping => grouping.Enabled(true))
        .Footer(true)
)
</div>
