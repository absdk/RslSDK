@model IEnumerable<SoftwareGrid.DataLogic.Models.Vendor>
@using EasySoft.Helper;
@{
    ViewBag.Title = "Vendor";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}
<div class="flat_area grid_16">
    <h2>
        Vendor List</h2>
    <p>
        @Html.ActionLink("Create New", "Create", new { vendorId = ViewBag.VendorId })
    </p>
</div>
@using (Html.BeginForm("Search", "Vendor"))
{
    <div class="box grid_16">
        <h2 class="box_head">
            Search</h2>
        <a href="#" class="grabber">&nbsp;</a> <a href="#" class="toggle">&nbsp;</a>
        <div class="toggle_container">
            <div class="block">
                <div class="search-item">
                    <div class="search-item-left">
                        <div class="label-container">
                            @Html.Label("Display ID")
                        </div>
                        <div class="text-container">
                            @Html.TextBox("VendorDisplayId")
                        </div>
                        <div class="label-container">
                            @Html.Label("Vendor Name")
                        </div>
                        <div class="text-container">
                            @Html.TextBox("VendorName")
                        </div>
                        <div class="label-container">
                            @Html.Label("Industry Category")
                        </div>
                        <div class="text-container">
                            @Html.DropDownList("IndustryID", ((IEnumerable<SoftwareGrid.DataLogic.Models.Industry>)ViewBag.PossibleIndustries).Select(option => new SelectListItem
                       {
                           Text = (option == null ? "None" : option.Name),
                           Value = option.IndustryID.ToString(),
                       }), "Choose...")
                        </div>
                    </div>
                    <div class="search-item-right">
                        <div class="label-container">
                            @Html.Label("Country")
                        </div>
                        <div class="text-container">
                            @Html.DropDownList("CountryID", ((IEnumerable<SoftwareGrid.DataLogic.Models.Country>)ViewBag.PossibleCountries).Select(option => new SelectListItem
                       {
                           Text = (option == null ? "None" : option.Name),
                           Value = option.CountryID.ToString(),
                       }), "Choose...")
                        </div>
                        <div class="label-container">
                            @Html.Label("State")
                        </div>
                        <div class="text-container">
                            @Html.DropDownList("StateID", ((IEnumerable<SoftwareGrid.DataLogic.Models.State>)ViewBag.PossibleStates).Select(option => new SelectListItem
                       {
                           Text = (option == null ? "None" : option.Name),
                           Value = option.StateID.ToString(),
                       }), "Choose...")
                        </div>
                        <div class="label-container">
                            @Html.Label("Vendor Status Category")
                        </div>
                        <div class="text-container">
                            @Html.DropDownList("VendorStatusCategoryID", ((IEnumerable<SoftwareGrid.DataLogic.Models.VendorStatusCategory>)ViewBag.PossibleVendorStatusCategories).Select(option => new SelectListItem
                       {
                           Text = (option == null ? "None" : option.Name),
                           Value = option.VendorStatusCategoryID.ToString(),
                       }), "Choose...")
                        </div>
                    </div>
                </div>
                <div style="width: 50%; float: left;">
                    &nbsp;
                </div>
                <div class="button_bar clearfix" style="float: left;">
                    <button class="green" type="submit">
                        <span>Search</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
}
<div style="clear: both;">
</div>
<div class="box grid_16">
    @(Html.Telerik().Grid(Model)
        .Name("Grid")
        .DataKeys(keys => keys.Add(c => c.VendorID))
        .Columns(columns =>
        {
            columns.Bound(c => c.VendorDisplayId).Title("Display ID").Width("5%").Sortable(true).Groupable(true).Filterable(true);
            columns.Template(
                @<text> <a href="@Url.Action("Overview", "Vendor", new { vendorId = @item.VendorID })" target="_blank" title="+@item.VendorName+">@item.VendorName</a>
    </text>
            ).HeaderTemplate(
                @<text> <span>Vendor Name</span>
    </text>
            ).Width("20%");
            columns.Bound(c => c.Industry.Name).Title("Industry Category").Width("20%").Sortable(true).Groupable(true).Filterable(true);
            columns.Bound(c => c.City).Title("City").Width("10%").Sortable(true).Groupable(true).Filterable(true);
            columns.Bound(c => c.State.Name).Title("State").Width("10%").Sortable(true).Groupable(true).Filterable(true);
            columns.Bound(c => c.Country.Name).Title("Country").Width("10%").Sortable(true).Groupable(true).Filterable(true);
            columns.Bound(c => c.VendorEmailAddress).Title("Vendor Email Address").Width("20%").Sortable(true).Groupable(true).Filterable(true);
            columns.Bound(c => c.VendorStatusCategory.Name).Title("Vendor Status Category").Width("10%").Sortable(true).Groupable(true).Filterable(true);
            columns.Template(
            @<text>
    <center>
        <a href="@Url.Action("Edit", "Vendor", new { id = @item.VendorID })" title="Edit">
            <img alt="Edit" src="/content/images/edit.png" /></a>
    </center>
    </text>
        ).HeaderTemplate(
            @<text>
    <center>
        <span>Edit</span>
    </center>
    </text>
        ).Width("20px");
            columns.Template(
                @<text>
    <center>
        <a href="@Url.Action("Delete", "Vendor", new { id = @item.VendorID })" title="Delete" onclick="return confirmSubmit()">
            <img alt="Edit" src="/content/images/delete.png" /></a>
    </center>
    </text>
            ).HeaderTemplate(
                @<text>
    <center>
        <span>Delete</span>
    </center>
    </text>
            ).Width("20px");
        })
        .Scrollable(scrolling => scrolling.Enabled(true))
        .Sortable(sorting => sorting.Enabled(true))
        .Pageable(paging => paging.Enabled(true))
        .Filterable(filtering => filtering.Filters(filters =>
        {
            if (ViewData["VendorDisplayId"].ToString(true) != string.Empty)
            {
                filters.Add(o => o.VendorDisplayId).Contains(ViewData["VendorDisplayId"].ToString(true));
            }
            if (ViewData["VendorName"].ToString(true) != string.Empty)
            {
                filters.Add(o => o.VendorName).Contains(ViewData["VendorName"].ToString(true));
            }
            if (ViewData["IndustryID"].ToString(true) != string.Empty)
            {
                filters.Add(o => o.IndustryID).IsEqualTo(ViewData["IndustryID"].ToInteger(true));
            }
            if (ViewData["CountryID"].ToString(true) != string.Empty)
            {
                filters.Add(o => o.CountryID).IsEqualTo(ViewData["CountryID"].ToInteger(true));
            }
            if (ViewData["StateID"].ToString(true) != string.Empty)
            {
                filters.Add(o => o.StateID).IsEqualTo(ViewData["StateID"].ToInteger(true));
            }
            if (ViewData["VendorStatusCategoryID"].ToString(true) != string.Empty)
            {
                filters.Add(o => o.VendorStatusCategoryID).IsEqualTo(ViewData["VendorStatusCategoryID"].ToInteger(true));
            }
        }))
        .Groupable(grouping => grouping.Enabled(true))
        .Footer(true)
)
</div>
